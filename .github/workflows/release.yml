name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"
    branches:
      - "*"

  pull_request:
    branches:
      - main
env:
  PLUGIN_NAME: obsidian-obsimat-plugin

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          git clone https://github.com/sympy/sympy.git
          pip install -e sympy

      - name: Run tests
        run: |
          pytest --ignore=sympy



  sympy-client-build:
    runs-on: ${{ matrix.os.os_name }}
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os:
          - os_name: windows-latest
            rel_name: win
          - os_name: macos-latest
            rel_name: macos

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install Pip Dependencies
        shell: bash
        id: install-pip-dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate || . .venv/Scripts/activate
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build Executable
        id: build-executable
        shell: bash
        run: | 
          source .venv/bin/activate || . .venv/Scripts/activate
          pyinstaller --onefile --collect-data sympy --add-data "./sympy-client/src/grammar/obsimat_grammar.lark:grammar" sympy-client/src/SympyClient.py

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: SympyClient-${{ matrix.os.rel_name }}
          path: |
            ./dist/SympyClient
            ./dist/SympyClient.*

  plugin-build:
    runs-on: ubuntu-latest
    needs: [ test, sympy-client-build ]
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Build Plugin
        run: |
          npm install
          npm run build
      
      - name: Download Sympy Client
        uses: actions/download-artifact@v4
        with:
          pattern: SympyClient-*
          path: bin

      - name: List Binaries
        run: |
            ls -lR bin
      
      - name: Create Zips for Subfolders in Bin
        run: |
            for dir in bin/*/; do
              cp main.js manifest.json styles.css "$dir"
              rel_name=$(basename "$dir" | sed 's/SympyClient-//')
              zip -r "./rel-assets/${{env.PLUGIN_NAME}}-${{ github.ref_name}}-${rel_name}.zip" "$dir"
            done

      - name: List All
        run: |
            ls -lR ./rel-assets

      # - name: Create Windows Zip
      #   run: |
      #     mkdir ${{ env.PLUGIN_NAME }}
      #     cp main.js manifest.json styles.css bin/SympyClient.* ${{ env.PLUGIN_NAME }}
      #     zip -r ${{ env.PLUGIN_NAME }}-win ${{ env.PLUGIN_NAME }}
      #     rm -rf ${{ env.PLUGIN_NAME }}

      # - name: Download MacOS Executable
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: SympyClient-macos-latest
      #     path: bin

      # - name: Create MacOS Zip
      #   run: |
      #     mkdir ${{ env.PLUGIN_NAME }}
      #     chmod +x bin/SympyClient
      #     cp main.js manifest.json styles.css bin/SympyClient ${{ env.PLUGIN_NAME }}
      #     zip -r ${{ env.PLUGIN_NAME }}-macos ${{ env.PLUGIN_NAME }}
      #     rm -rf ${{ env.PLUGIN_NAME }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     VERSION: ${{ github.ref }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: ${{ github.ref }}
      #     draft: true
      #     prerelease: false


      # - name: Upload Windows Release Asset
      #   id: upload-win-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./${{ env.PLUGIN_NAME }}-win.zip
      #     asset_name: ${{ env.PLUGIN_NAME }}-${{ github.ref_name }}-win.zip
      #     asset_content_type: application/zip

      # - name: Upload Macos Release Asset
      #   id: upload-macos-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./${{ env.PLUGIN_NAME }}-macos.zip
      #     asset_name: ${{ env.PLUGIN_NAME }}-${{ github.ref_name }}-macos.zip
      #     asset_content_type: application/zip

